#!/usr/bin/env bash
function clone_repo() {
  git clone --recurse-submodules https://github.com/landerwells/dotfiles.git ~/.config/dotfiles
}

function install_brew() {
  echo "Installing Homebrew"
  yes | /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
  if [ "$(uname)" == "Darwin" ]; then
    (echo; echo 'eval "$(/opt/homebrew/bin/brew shellenv)"') >> ~/.bashrc
    eval "$(/opt/homebrew/bin/brew shellenv)"
  else
    (echo; echo 'eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"') >> ~/.bashrc
    eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"
  fi
}

function mac_setup() {
  echo "Setting up Mac"
  xcode-select --install
  clone_repo
  install_brew
}

function ubuntu_setup() {
  echo "Setting up Ubuntu"
  sudo apt update && sudo apt upgrade -y
  sudo apt install -y git
  sudo apt install -y net-tools
  sudo apt install -y gcc
  clone_repo
  install_brew
}

create_symlink() {
  source_dir="$1"
  destination_dir="$2"
  if [ -e "$destination_dir" ]; then
    if [ -L "$destination_dir" ]; then
      echo "Removing existing symbolic link $destination_dir"
      unlink "$destination_dir"
    else
      echo "Removing existing $destination_dir"
      rm -rf "$destination_dir"
    fi
  fi
  ln -s "$source_dir" "$destination_dir"
}

FLAG_FILE="$HOME/.config/dotfiles_setup_done"

# Check whether we are on a Mac or Linux
if [ "$(uname)" == "Darwin" ]; then
  ID="mac"
elif [ -f "/etc/lsb-release" ]; then
  ID="ubuntu"
else
  ID="unsupported"
fi

case $ID in
  ubuntu)
    ubuntu_setup
    ;;
  mac)
    mac_setup
    ;;
  *)
    echo $ID
    _task "Unsupported OS"
    _cmd "echo 'Unsupported OS'"
    ;;
esac

# Specify the source directory and destination directory
mkdir -p ~/.config/dotfiles
DOTFILES_REPO="$HOME/.config/dotfiles"
CONFIG_DIR="$HOME/.config"

# Create symbolic links for mac specific directories
if [ "$(uname)" == "Darwin" ]; then
  brew bundle --file="$DOTFILES_REPO/Brewfile"
  create_symlink "$DOTFILES_REPO/yabai" "$CONFIG_DIR/yabai"
  create_symlink "$DOTFILES_REPO/skhd" "$CONFIG_DIR/skhd"
  create_symlink "$DOTFILES_REPO/karabiner" "$CONFIG_DIR/karabiner"
  create_symlink "$DOTFILES_REPO/linearmouse" "$CONFIG_DIR/linearmouse"
  create_symlink "$DOTFILES_REPO/iterm2" "$CONFIG_DIR/iterm2"
else
  ./install
fi

create_symlink "$DOTFILES_REPO/nvim" "$CONFIG_DIR/nvim"
create_symlink "$DOTFILES_REPO/bash" "$CONFIG_DIR/bash"
create_symlink "$DOTFILES_REPO/zsh" "$CONFIG_DIR/zsh"
create_symlink "$DOTFILES_REPO/aliases" "$CONFIG_DIR/aliases"
create_symlink "$DOTFILES_REPO/exports" "$CONFIG_DIR/exports"
create_symlink "$DOTFILES_REPO/tmux" "$CONFIG_DIR/tmux"
create_symlink "$DOTFILES_REPO/git" "$CONFIG_DIR/git"
create_symlink "$DOTFILES_REPO/starship.toml" "$CONFIG_DIR/starship.toml"
create_symlink "$DOTFILES_REPO/alacritty" "$CONFIG_DIR/alacritty"

create_symlink "$DOTFILES_REPO/haskeline" "$HOME/.haskeline"
create_symlink "$DOTFILES_REPO/bash/.inputrc" "$HOME/.inputrc"
create_symlink "$DOTFILES_REPO/zsh/.zprofile" "$HOME/.zprofile"

if [ ! -f "$FLAG_FILE" ]; then
  echo 'source ~/.config/dotfiles/bash/.bashrc' >> ~/.bashrc
  echo "Dotfiles setup complete"
  echo "Please restart your terminal"
  touch "$FLAG_FILE"
fi

